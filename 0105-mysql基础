1.多表查询
当一张表中数据无法满足条件得使用使用多张表
a.笛卡尔积
select * from ecs_goods;
select * from ecs_category;
select * from ecs_goods,ecs_category;
两张表不做任何关联产生得数据，数据量成倍增加，无效数据增加，为了避免此类情况，引入内联查询、左联查询、右联查询
b.内联查询
语法:
select 列 from  表1,表2 where 表1.列=表2.列;
select 列 from 表1 inner join 表2 on 表1.列=表2.列;
关联列判断方法
名字相同
作用相同
主外键关系
需求:查询商品名称是KD876得分类名称
a.分析列
	商品名称
	分类名称
b.分析表
	goods_name  ecs_goods
	cat_name    ecs_category
c.关联
	select * from ecs_goods,ecs_category
	where ecs_category.cat_id=ecs_goods.cat_id;
d.过滤
	select cat_name from ecs_goods,ecs_category
	where ecs_category.cat_id=ecs_goods.cat_id
	and goods_name='KD876';

需求：查询商品分类名称是3G手机得商品名称、本店售价有哪些？
a.分析列
	分类名称
	商品名称
	本店售价
b.分析表
	ecs_goods
	ecs_category
c.关联
	select * from ecs_goods g,ecs_category c
	where g.cat_id=c.cat_id;
d.过滤
	select g.goods_name,g.shop_price from ecs_goods g,ecs_category c
	where g.cat_id=c.cat_id
	and cat_name='3G手机';	

grant all privileges on *.* to root@'%' identified by 'root';


需求1:查询分类名称是3G手机或者服装的商品名称有哪些
a.分析列
	分类名称
	商品名称
b.分析表
	ecs_goods
	ecs_category
c.关联
	select g.goods_name from ecs_goods g,ecs_category c
	where g.cat_id=c.cat_id
 	and c.cat_name='服装'
	or c.cat_name='3G手机'
需求2：查询商品本店售价范围在2000和3000之间所有的商品的分类名称 
select c.cat_name from ecs_goods g,ecs_category c
where g.cat_id=c.cat_id
and g.shop_price between 2000 and 3000; 

--4.jpg
1.select s#,grade from sc where c#='C2';
2.select sname from s where sname like 'D%';
3.select s.s#,s.sname  from s,sc,c 
where s.s#=sc.s# and sc.c#=c.c#
and c.cname='Maths';
4.
select s# from sc where c# in ('C2','C4');
--2.jpg
1.
select s.name  from student s,achievement a
where s.id=a.id and a.mark>85;
2.
select count(id) from achievement where mark>=90;
3.
insert into achievement values(7,80);
4.
update achievement set mark=87 where id=3;
5.
delete from student wherw name='Betty';
delete from achievement where id=6;
--1.jpg
1.
select * from test1 where department='计算机系' and place='北京';
2.
update test1 set department='信息学院' where department='计算机系';
3.
select t1.no,t1.name,t2.grade,t2.courses  from test1 t1,test2 t2
where t1.no=t2.no
and t2.grade>=75;
2.左联查询和右联查询
左联、右联区别:左联左表中所有数据都有
create table a(
	a int
);
insert into a values(1),(2),(3);

create table b(
	a int,
	b char(2)
);
insert into b values(1,'a'),(2,'b'),(4,'d');



左联：
	select 列 from 左表 left join 右表 on 左表.列=右表.列;
	结果:内联查询结果+左表中有，右表中没有得右表显示为空
	select * from a;
	select * from b;
	select * from a,b where a.a=b.a;
	select * from a left join b on a.a=b.a;
右联：
	select 列 from 左表 right join 右表 on 左表.列=右表.列;
	select * from b right join a on a.a=b.a;
=================================================================
2.子查询
一条SQL语句的执行依赖于另外一条SQL语句的执行结果
子查询可以用于数据的新增、修改、删除中
需求:查询商品名称是KD876的分类名称
a.分析列
	goods_name
	cat_name
b.分析表
	ecs_goods
	ecs_category
c.拆分
	查询ecs_goods表中满足条件的cat_id
	select cat_id from ecs_goods where goods_name='KD876';
	查询ecs_category表中cat_id为上面查询出来结果的cat_name
	select cat_name from ecs_category where cat_id=(select cat_id from ecs_goods where goods_name='KD876');
--2.jpg
3.insert into achievement values((select id from student where name='Robert'),80);
4.update achievement set mark=87 where id=(select id from student where name='Rose');
5.
  delete from achievement where id=(select id from student where name='Betty');
  delete from student where name='Betty';
子查询分为单行子查询和多行子查询
	单行子查询：查询子句返回的结果只有一个，可以用=或者in
	多行子查询：查询子句返回的结果有多个，可以用in，all，any
需求:
	查询本店售价范围是2000和3000之间的分类名称
	查询ecs_goods表中满足条件的cat_id
	select cat_id from ecs_goods where shop_price between 2000 and 3000;
	查询ecs_category表中cat_id为上面查询出来的分类名称
	select cat_name from ecs_category where cat_id in (select cat_id from ecs_goods where shop_price between 2000 and 3000);


3.sakila数据库的导入
	a.官网下载sakila数据库
		https://dev.mysql.com/doc/index-other.html
	b.解压sakila数据库压缩包
	c.进入到sakila解压后的文件夹
	d.进入到命令提示符
	e.登陆mysql
		mysql -u root -p
	f.导入表
		source sakila-schema.sql;
	g.导入数据
		source sakila-data.sql;

分别通过多表查询和子查询写出下面SQL
查询以C开头的国家有哪些城市?
select c.city from city c,country co
where c.country_id=co.country_id
and co.country like 'C%';
select country_id from country where country like 'C%';
select city from city where country_id in (select country_id from country where country like 'C%')

查询客户表中名字为MARY的所在城市?
查询客户表中满足条件的adddress_id
select address_id from customer where first_name='Mary';
查询地址表中满足address_id为上面查询出来结果的city_id
select city_id from address where address_id in (select address_id from customer where first_name='Mary');
查询城市表中city_id为上面查询出来的city
select city from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='Mary'));

查询客户表中名字为MARY的所在国家?
查询客户表中满足条件的adddress_id
select address_id from customer where first_name='Mary';
查询地址表中满足address_id为上面查询出来结果的city_id
select city_id from address where address_id in (select address_id from customer where first_name='Mary');
查询城市表中city_id为上面查询出来的country_id
select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='Mary'));
查询国家表中country_id为上面查询出来结果的country
select country from country where country_id in (select country_id from city where city_id in (select city_id from address where address_id in (select address_id from customer where first_name='Mary')));

4.分组查询
按照某种条件进行分类
a.分组函数(聚合函数)
	分组函数通常是和分组一起使用，但是也可以单独使用
	max()     最大
	min()     最小
	avg()     平均
	sum()     求和
	count()   计数
	需求:查询ecs_goods表中商品的最高本店售价，平均本店售价
	select max(shop_price),avg(shop_price) from ecs_goods;
	需求:查询ecs_goods表中最高本店售价的商品名字
	select max(shop_price) from ecs_goods;
	select goods_name from ecs_goods where shop_price=(select max(shop_price) from ecs_goods);
b.分组查询
	语法:select 列 from 表
			where 条件
				group by 分组条件
					having 分组后过滤条件;
	group by 后面跟的就是分组条件，一般来说每后面跟的就是分组条件
	需求:查询ecs_goods表中每种分类有多少个商品，要求显示分类id，商品数量
	select cat_id,count(goods_name) from ecs_goods group by cat_id;
	需求:查询每种分类有多少个商品，要求显示分类名称，商品数量
	select c.cat_name,count(g.goods_name) from ecs_category c,ecs_goods g
	where c.cat_id=g.cat_id
	group by c.cat_name;
	where和having
	where   分组前过滤，不能直接跟分组函数
	having  分组后过滤，可以直接跟愤怒函数
	需求:查询分类商品数量超过3的分类名称
	select c.cat_name,count(g.goods_name) from ecs_category c,ecs_goods g
	where c.cat_id=g.cat_id
	group by c.cat_name
	having count(g.goods_name)>3;
	分组单分组、双分组、多分组
	双分组:先按照第一个条件进行分组，再按照第二个条件进行分组
	查询每种分类id下每种商品的最高，最低本店售价
	select   cat_id,goods_name,max(shop_price),min(shop_price) from ecs_goods
	group by cat_id,goods_name;




