1.常见的数据库平台
a.关系型数据库
	informix 军、政、运、银  IBM+HP 小机
	db2      军、政、运、银  IBM 
	oracle   中大型   
	mysql    互联网公司
	sqlserver 传统
b.非关系型数据库
	mongodb   大数据、爬虫
	redis     缓存、验证、消息队列
	cassandra facebook
2.网站后端组成
	操作系统
		unix
		linux
		windows
	web服务器(提供网页服务)
		apache
		tomcat 
		nginx
		iis
	数据库服务器(提供数据)
		oracle
		mysql
		sqlserver
	集成软件
		xampp
			x:任意操作系统
			a:apache
			m:mysql
			p:php
			p:perl
		wamp
		phpstudy
3.mysql的安装
	a.官网下载安装
		https://dev.mysql.com/downloads/mysql/
	b.集成工具(phpstudy)
		b1.下载
			建议phpstudy2016
			安装:傻瓜安装
		b2.phpstudy目录结构
			apache
				bin 	 存放命令
				conf     存放配置文件
					httpd.conf  apache的主配置文件
				logs     存放日志
			mysql
				bin      存放mysql命令
				data     存放数据的位置
				lib      存放库文件的位置
					my.ini   mysql的配置文件
			WWW
				web项目代码存放位置
4.mysql基础
	a.mysql的服务
		mysql是c/s架构软件
			c/s 架构
			c:客户端
			s:服务器
		mysql的服务:
			mysqld   mysql的主服务
			mysql    mysql的客户端服务
		mysql的端口:
			3306
		端口和服务的检查:
			win+r--cmd(打开命令提示符)
			a1.检查进程
				tasklist | find "mysqld"  查看mysqld进程是否正常运行
				tasklist   查看系统中所有进程
				|          管道：前面的输出作为后面的输入
				find       搜索
				mysqld     mysql的服务
			a2.检查端口
				端口:区分应用层进程的标识
				(OSI参考模型、TCP/IP参考模型、TCP和UDP、TCP链接和断开链接)
				netstat -an | find "3306"
				netstat -an 查看系统中开放的所有端口
			a3.补充
				127.0.0.1==localhost==电脑本机
				0.0.0.0  任意IP
	b.mysql的登陆
		b1.登陆命令(命令提示符)
			mysql
				登陆本地数据库
			mysql -u root -p
				管理员登陆本地数据库
			mysql -h 127.0.0.1 -u root -p
				管理员登陆IP地址为127.0.0.1的数据库
			mysql的管理员
				root
		b2.登陆方式
			1>进入到命令所在目录执行
				d:
				cd phpStudy\MySQL\bin
			2>设置环境变量(让系统能找到命令所在位置)
				计算机--属性---高级---环境变量---系统变量---Path中添加mysql的bin的路径
				;D:\phpStudy\MySQL\bin
				确定--确定--确定
				注意:设置完环境变量后一定要重启命令提示符生效
	c.mysql基础
		数据库是由数据软件和数据库数据
		常说的数据库是数据库数据
		数据库是由表组成的
		表是由数据组成的
		补充：null 代表空，没有任何数据
		mysql的图形化管理工具:
			sqlyog(小海豚)
			mysql workbench
			navicat
			toad
			dbeaver
			phpmyadmin

		show databases; 
			查看当前有哪些数据库
		select database();
			查看当前数据库的名字
		use mysql;
			数据库切换为mysql
		show tables;
			查看当前数据库中有哪些表
		select * from user\G
			查询user表中所有的数据
	d.表结构和约束
		d1.数据类型
			字符类型  'abc'  char varchar
			数字类型  123 1.23  int 
			日期类型  '2018-01-01'  date
		d2.表结构的创建
			语法:create table 表(
				列名\字段\表头   数据类型,
				列名            数据类型,
				。。。。
			);
			需求:创建商品表(goods),商品名称(name)字符类型,商品价格(price)数字类型，出厂日期(ddate)日期类型
			create table goods(
				name char(10),
				price int,
				ddate date
			);
		d3.查看表结构
			语法: desc 表结构;

		d4.修改表结构
			增加列
			需求:goods表中新增列，商品id，cid，数字类型
				alter table goods add cid int;
			修改列
			需求:goods表中商品id列修改为字符类型，最多10个字符
				alter table goods modify cid char(10);
			删除列
			需求:goods表中删除cid列
				alter table goods drop column cid;
		d5.删除表结构
			语法:drop table 表名;
			需求:删除goods表
			drop table goods;
		d6.约束
			
			主键  列中的数据唯一，不重复，表中只能有一个主键，不能为空
			唯一  列中的数据唯一，不重复，表中可以有多个唯一约束，可以为空，作为主键约束的补充
			非空  列中的数据不能为空
			检查  列中的数据是否满足条件
			外键  列中的数据依赖于另外一张表的列

			外键约束需要注意:
			1.被参考表的被参考列一定存在
			2.参考列和被参考列的数据类型必须一致
			3.被参考列一定是主键约束

			create table 表(
				列  数据类型 primary key,#主键约束
				列  数据类型 unique,#唯一约束
				列  数据类型 not null,#非空约束
				列  数据类型 check(检查条件),#检查约束
				列  数据类型 references 被参考表(被参考列)  #外键约束
			);
	e.SQL语句分类
		SQL:结构化查询语言
		DDL:数据库定义语言  create alter drop truncate
		DML:数据库操作语言  insert update delete
		DCL:数据库控制语言  grant revoke
		DQL:数据查询语言    select
	f.事务
		MyISAM  不支持事务，主要用于查询多的情况，支持部分约束
		innodb  支持事务，可以用于增删改查，支持所有约束
		事务:一件事有开始就一定要结束
		HeyGor<======bank<=====富豪们
		commit;     结束事务，把数据提交到数据库中，除非人为修改，否则不会变动
		rollback;   结束事务，把数据库状态恢复到最后一次提交的状态
		DML语句触发事务的开始，开始就一定要结束
	g.数据的新增
		字符类型数据需要加单引号
		日期类型数据需要加单引号
		数字类型数据直接使用
		列的数据类型和值的数据类型必须匹配，数据的顺序一定要一致
		g1.向表中指定列新增数据
			insert into 表(列1,列2,....) values(值1,值2.....);
			需求:向goods表中新增数据，商品名称simida，价格250
				insert into goods(name,price) values('simida',250);
			需求：向goods表中所有列新增数据，名称haleshao，价格300，日期 2000-01-01
				insert into goods(price,name,ddate) values(300,'haleshao','2000-01-01');
		g2.向表中所有列新增数据
			insert into 表 values(值1,值2....);
			需求：向goods表中所有列新增数据，名称odusang，价格300，日期 2000-01-01
				insert into goods values('odusang',300,'2000-01-01');	
	h.数据的修改
		update 表 set 列=值 where 条件;
		如果不加where条件，默认修改的是整个列的数据
		如果增加where条件，默认修改的是指定行的列
		需求:goods表中名字是simida的价格修改为998
			update goods set price=998 where name='simida';
		需求:goods表中所有商品价格设置为0
			update goods set price=0;
	i.数据的删除
		delete     可以删除指定数据，删除数据可以找回，DML
		truncate   截断表，只能删除所有数据，删除数据无法找回，DDL
		delete from 表 where 条件;
		如果不加where 条件删除表中所有数据
		如果增加 where 条件，删除表中满足条件的数据
		需求:删除goods表中商品名称是simida的所有信息
			delete from goods where name='simida';
		需求:删除goods表中所有数据
			delete from goods;
		truncate table 表;
		需求:删除goods表中所有数据
			truncate table goods;
	j.数据的查询
		j1.查询的分类
			简单查询
			多表查询
			分组查询
			子查询
		j2.简单查询
			select 列 from 表 where 条件;
			select后面from前面是和列相关的
			where条件是和行相关的
			ecshop表结构说明：
				https://blog.csdn.net/weixin_37678117/article/details/81192245
			查询指定列数据
				需求:查询ecs_goods表中所有商品名称
				select goods_name from ecs_goods;
			查询指定行数据
				需求:查询ecs_goods表中商品名称是KD876的所有信息
				select * from ecs_goods where goods_name='KD876';
			查询指定行的列的数据
				需求:查询ecs_goods表中商品名称是诺基亚E66的本店售价
				select shop_price from ecs_goods where goods_name='诺基亚E66';
			查询所有数据
				需求:查询ecs_goods表中所有数据
				select * from ecs_goods;
		j3.补充(ecshop项目部署)
			http://192.168.4.159:88/ecshop1.zip
			1>解压ecshop1压缩包
			2>复制解压好的压缩包到phpstudy的WWW文件夹中
			3>浏览器中输入127.0.0.1/ecshop1按照提示安装
			4>数据库配置
				主机 localhost
				端口 3306
				用户名 root
				密码   root
				数据库名 test
		j4.where条件
			1>比较运算
				>
				<
				=
				>=
				<=
				!=
				<>  不等于
				需求:查询ecs_goods表中本店售价高于2000的所有商品的本店售价和商品名称
				select shop_price,goods_name from ecs_goods where shop_price>2000;
				需求:查询ecs_goods表中商品名称不是KD876的所有商品信息
				select * from ecs_goods where goods_name <>'KD876';
			2>关系运算
				and     同时满足条件
				or      满足一个条件即可
				not     不满足条件
				需求:查询ecs_goods表中本店售价低于2000并且商品名称是KD876的所有信息
				select * from ecs_goods where shop_price<2000 and goods_name='KD876';
				需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
				select * from ecs_goods where goods_name='KD876' or goods_name='诺基亚';
			3>区间
				between...and...
				区间是包括两个端点，小在前，大在后
				需求:查询ecs_goods表中本店售价范围800和1600之间所有商品的信息
				select * from ecs_goods where shop_price>=800 and shop_price<=1600;
				select * from ecs_goods where shop_price between 800 and 1600;
			4>空值查询
				null:没有任何数据类型，没有任何值,空值不能用于比较和运算，查询时候使用is null
				或者is not null
				需求:查询ecs_goods表中suppliers_id为空的所有信息
				select * from ecs_goods where suppliers_id is null;
			5>模糊查询
				当信息不完整时候使用，通常和字符类型一起使用
				like  
				_     一个字符
				%     任意个字符
				需求:查询ecs_goods表中商品名称以诺基亚开头的所有信息
				select * from ecs_goods where goods_name like '诺基亚%';
				需求:查询ecs_goods表中商品名称以6结尾的所有信息
				select * from ecs_goods where goods_name like '%6';
				需求:查询ecs_goods表中商品名称是6个字符的所有信息
				select * from ecs_goods where goods_name like '______';
			6>in
				在...里面，或者关系
				需求:查询ecs_goods表中商品名称是KD876或者诺基亚的所有信息
				select * from ecs_goods where goods_name in ('KD876','诺基亚');
				



emp表中有以下列：
   empno    员工号    int
   hiredate 入职日期  date
   ename    名字      char
   sal      工资      int
   comm     佣金      int
   deptno   部门号    int



1.查询emp表中工资大于2500的人的所有信息
select * from emp where sal>2500;


3.查询emp表中名字为ALLEN或者KING的人的工资和姓名、部门号
select sal,ename,deptno from emp where ename in ('ALLEN','KING');


4.查询emp表中部门为20号部门或者工资大于1500并且小于2500的人的所有信息
select * from emp where deptno=20 or sal>1500 and sal<2500;


5.查询emp表中名字为KING或者部门号为30号部门的人的姓名，佣金，部门号
select ename,comm,deptno from emp where ename='KING' or deptno=30;


6.查询emp表中员工号为7369的人的所有信息
select * from emp where empno=7369;

7.查询emp表中工资范围在800到1000的人或工资范围在2000到2500的人的所有信息
select * from emp where sal between 800 and 1000 or sal between 2000 and 2500;


8.查询emp表中工资高于1500，2000，2500的任何一个的人的所有信息
select * from emp where sal>1500 or sal>2000 or sal>2500;



9.查询emp表中名字以AL开头的人或者佣金为空的人的所有信息
select * from emp where ename like 'AL%' or comm is null;


10.查询emp表中佣金不为空的人并且工资大于800，1500，2000的所有工资的人的所有信息
select * from emp where comm is not null and sal>800 and sal>1500 and sal>2000;













