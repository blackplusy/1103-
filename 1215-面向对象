1.面向对象基础
	a.面向对象概念
		面向对象是一种抽象思维，抽象眼光看世界
		万物皆对象
		面向对象3大特性:继承、封装、多态
	b.面向对象基本概念(类、对象)
		类:描述加油相同属性和方法的集合，定义集合中每个对象共有的属性和方法
		类：
			人、妖、仙
			好人、坏人
		对象:
			通过类定义数据结构实例，某一个具体事物的存在，现实中可以直接使用
		对象:
			5空
			8戒
			牛魔
			tangsir
	c.面向对象3大特性
		封装：抽象到数据和行为的组合，封装的目的是增强安全性，简化代码，使用者可以不用考虑具体细节，只需要通过外部接口一定权限来访问
		通常情况:通过开源软件进行修改，封装后形成自己的软件

		继承:一个派生类继承基类的属性和方法
		唐sir:人有人他妈，妖有妖他妈，xxxx?
		人:
			父亲(单眼皮)   母亲(大个)   ----孩子(单眼皮、大个)
		妖:
			牛魔王(坏)    小甜甜(机灵)  ----redhair(坏，机灵)
		多态：针对不同类型变量进行相同的操作，出现不同的结果
		白骨精----打-----挂掉
		白龙马----打-----核心成员
2.类的定义和调用
	a.python中类定义的方法
		经典类
			class 类名:
				方法列表
		新式类
			class 类名(object):
				方法列表
	b.python中类定义的例子
		面向对象可以理解为用模具来创造实物

	c.实例化对象
		对象=类()
3.init方法
	a.__init__使用方法
		初始化参数(定义默认值)
		class 类名:
			def __init__(self):
				方法列表
	b.__init__调用
		没有创建对象时候没有调用__init__()方法钱就默认两个值，一个boy，一个girl，__init__方法创建对象后回默认被调用
	c.注意
		__init__方法，创建一个对象默认被调用，不需要手动调用
		__init__(self)中第一个参数名字是self，如果创建对象时候传递实参，再self之外传入
4.self
	a.self实例
	b.注意事项
		self可以理解为自己
		可以把self当作c++的指针一样理解，就是自己
		当某个对象调用其方法时候python解释器会把这个对象作为第一个参数传递给self,开发者只需要传递后面的参数即可
		在类中self只能再方法中使用，表示的是实例属性，每个实例可以设置不同的值，互相不影响
		如果在类级别中没有使用self的属性，是类的属性，一般作为全局变量使用
5.面向对象例子
6.类的属性的访问特性
	a.类的属性的访问特性
		类的属性我们可以通过类名及实例对象去访问
		实例属性只能通过实例化对象进行访问
7.类的私有化属性
	a.私有化属性表示方法
		私有化属性就是  __变量名  
	b.私有化属性的访问方法
		通常是类中的方法来进行调用
	c.注意事项
		python中没有像c++、java这种private、public关键字区分共有属性还是私有属性，私有属性以__开头，否则为共有属性
8.类的方法的定义
	a.类的方法的定义
		类的对象拥有的方法，通常使用@classmethod来表示方法，对于类的方法，第一个参数必须是类的对象，一般以cls作为第一个参数，可以通过实例对象和类对象进行访问

	b.类的方法实例
		类的方法还有一个用途是对类的属性进行修改
9.实例方法和类方法
	a.实例方法：通过它来实现传递实例属性和方法(也可以传递类属性和方法)
		调用:只能由实例对象调用
	b.类方法：通过它来传递类的属性和方法(不能传递实例属性和方法)
		调用：实例对象和类都可以调用
10.继承
	a.单继承
		一个类派生另外一个子类，字类继承父类的属性和方法
	b.多继承
		子类继承多个父类的属性和方法
	c.父类重写
		当子类中方法和父类中方法名字一致时候，子类会重写父类
11.多态
	鸭子类型
	a.什么是多态
		多态:多种形态，一个方法能表现出不同的形态，同一操作方法针对不同对象，有不同解释，产生不同的结果
	b.多态例子
		+：多态
		

